{"version":3,"sources":["../src/app.js"],"names":["mongoose","Promise","global","connect","useNewUrlParser","useUnifiedTopology","then","console","log","catch","err","process","exit","app","PORT","use","express","json","urlencoded","router","req","res","next","error","Error","status","message","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEAA,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;AACAD,mBACGG,OADH,CACW,8BADX,EAC2C;AACvCC,mBAAiB,IADsB;AAEvCC,sBAAoB;AAFmB,CAD3C,EAKGC,IALH,CAKQ,YAAM;AACVC,UAAQC,GAAR,CAAY,wCAAZ;AACD,CAPH,EAQGC,KARH,CAQS,UAACC,GAAD,EAAS;AACdH,UAAQC,GAAR,CAAY,mDAAZ,EAAiEE,GAAjE;AACAC,UAAQC,IAAR;AACD,CAXH;AAYA;;AAEA,IAAMC,MAAM,wBAAZ;AACA,IAAMC,OAAO,IAAb;;AAEAD,IAAIE,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAJ,IAAIE,GAAJ,CAAQC,kBAAQE,UAAR,EAAR;AACA;AACA;AACAL,IAAIE,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAF,IAAIE,GAAJ,CAAQ,MAAR,EAAgBI,cAAhB;;AAEAN,IAAIE,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAMC,QAAQ,IAAIC,KAAJ,CAAU,WAAV,CAAd;AACAD,QAAME,MAAN,GAAe,GAAf;AACAF,QAAMG,OAAN,GAAgB,eAAhB;AACAJ,OAAKC,KAAL;AACD,CALD;;AAOAV,IAAIE,GAAJ,CAAQ,UAACQ,KAAD,EAAQH,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AACjCD,MAAII,MAAJ,CAAWF,MAAME,MAAN,IAAgB,GAA3B;AACA,SAAOJ,IAAIJ,IAAJ,CAAS;AACdM,WAAO,EAAEG,SAASH,MAAMG,OAAjB;AADO,GAAT,CAAP;AAGD,CALD;AAMAb,IAAIc,MAAJ,CAAWb,IAAX,EAAiB,YAAM;AACrBP,UAAQC,GAAR,2BAAoCM,IAApC;AACD,CAFD","file":"app.js","sourcesContent":["import express from \"express\";\nimport mongoose from \"mongoose\";\nimport bodyParser from \"body-parser\";\nimport { router } from \"../src/config/routes\";\nimport logger from \"morgan\";\n\nmongoose.Promise = global.Promise;\nmongoose\n  .connect(\"mongodb://localhost/userdata\", {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  })\n  .then(() => {\n    console.log(\"Successfully connected to the database\");\n  })\n  .catch((err) => {\n    console.log(\"Could not connect to the database. Exiting now...\", err);\n    process.exit();\n  });\n// mongoose.connect(\"mongodb://localhost/userdata\");\n\nconst app = express();\nconst PORT = 3000;\n\napp.use(express.json());\napp.use(express.urlencoded());\n// app.use(bodyParser.json());\n// app.use(bodyParser.urlencoded({ extended: true }));\napp.use(logger(\"dev\"));\napp.use(\"/api\", router);\n\napp.use((req, res, next) => {\n  const error = new Error(\"Not found\");\n  error.status = 404;\n  error.message = \"Invalid route\";\n  next(error);\n});\n\napp.use((error, req, res, next) => {\n  res.status(error.status || 500);\n  return res.json({\n    error: { message: error.message },\n  });\n});\napp.listen(PORT, () => {\n  console.log(`server is running on ${PORT}`);\n});\n"]}